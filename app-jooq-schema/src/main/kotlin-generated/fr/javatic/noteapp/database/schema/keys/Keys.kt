/*
 * This file is generated by jOOQ.
 */
package fr.javatic.noteapp.database.schema.keys


import fr.javatic.noteapp.database.schema.tables.Note
import fr.javatic.noteapp.database.schema.tables.User

import org.jooq.ForeignKey
import org.jooq.Record
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal


// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val NOTE_PKEY: UniqueKey<Record> = Internal.createUniqueKey(Note.NOTE, DSL.name("note_pkey"), arrayOf(Note.NOTE.ID), true)
val USER_LOGIN_KEY: UniqueKey<Record> = Internal.createUniqueKey(User.USER, DSL.name("user_login_key"), arrayOf(User.USER.LOGIN), true)
val USER_PKEY: UniqueKey<Record> = Internal.createUniqueKey(User.USER, DSL.name("user_pkey"), arrayOf(User.USER.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val NOTE__NOTE_AUTHOR_ID_FKEY: ForeignKey<Record, Record> = Internal.createForeignKey(
    Note.NOTE,
    DSL.name("note_author_id_fkey"),
    arrayOf(Note.NOTE.AUTHOR_ID),
    fr.javatic.noteapp.database.schema.keys.USER_PKEY,
    arrayOf(User.USER.ID),
    true
)
